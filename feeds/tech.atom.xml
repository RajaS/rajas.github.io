<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Reach Beyond Grasp</title><link href="http://rajaselvaraj.co.in/" rel="alternate"></link><link href="http://rajaselvaraj.co.in/feeds/tech.atom.xml" rel="self"></link><id>http://rajaselvaraj.co.in/</id><updated>2012-07-31T00:00:00+05:30</updated><entry><title>A month with Sublime Text</title><link href="http://rajaselvaraj.co.in/a-month-with-sublime-text.html" rel="alternate"></link><published>2012-07-31T00:00:00+05:30</published><updated>2012-07-31T00:00:00+05:30</updated><author><name>Raja Selvaraj</name></author><id>tag:rajaselvaraj.co.in,2012-07-31:a-month-with-sublime-text.html</id><summary type="html">&lt;p&gt;&lt;img class='inset center' src='/images/ST_screenshot.png' title='Sublime Text 2' width='600px' /&gt;&lt;/p&gt;
&lt;p&gt;I don&amp;#8217;t write code for a living, still the amount of time I spend doing it makes me value a good editor. Like any decent programmer I am picky about what I use and biased towards what I prefer. Over the years, I have tried out a few different editors, notably gedit, geany, &lt;span class="caps"&gt;SPE&lt;/span&gt;, Komodo edit, Vim and Emacs. With patience and persistence, I think anyone will ultimately find the answer in Vi(m) or Emacs. For me it was Emacs that clicked and since the last 4 years or so, I have not really felt the need to try out another editor. With all the noise about Sublime Text, I thought it was time to give it a whirl, especially with the release of version 2, especially since some of the things in my current emacs setup were broken after the upgrade to Emacs 24. I used Sublime Text for about a month and these are some of my impressions -
&lt;!-- more --&gt;
  1. &lt;span class="caps"&gt;ST&lt;/span&gt; is blazing fast. With about 10 open files, it still restarts virtually instantaneously, while Emacs, even with my core i7 processor and &lt;span class="caps"&gt;SSD&lt;/span&gt;, takes a few seconds to start up. Practically though, this is not of much importance, since with my usual workflow, Emacs is always open and I wait for it to start up only once in a month or so when I reboot after a kernel&amp;nbsp;upgrade.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It comes with batteries included! With the default install, it is nice to see most things work automatically. In python mode for example, indentation, autocompletion, code folding all work out of the box. Once the package manager is installed, it is very easy to find and install additional packages. Although Emacs diehards usually discount the usefulness of folding, I found it quite useful and it is absolutely effortless in &lt;span class="caps"&gt;ST&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The enthusiasm of the author and the community for new developments in &lt;span class="caps"&gt;ST&lt;/span&gt; is infectious and even if the intermittent popups reminding you that is a trial are a little irritating, it is an incredibly good decision to allow a free trial without time limit to attract new&amp;nbsp;users. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coming from Emacs, the thing that I had the biggest difficulty in adjusting to was with creating a new file. The process in Emacs is a good example of the smooth workflow that has evolved with time. Creating a new file is the same as opening a file. If the parent directory does not exist, Emacs still creates the file and opens the buffer with a warning that you have to create the parent directory. And on M-x make-directory, the path for the parent directory is automatically filled in, so all you have to do is press enter. Compared to this &lt;span class="caps"&gt;ST&lt;/span&gt;&amp;#8217;s traditional method of &amp;#8216;Create file&amp;#8217; followed by &amp;#8216;Save&amp;#8217; seems&amp;nbsp;cumbersome.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I could not get syntax highlighting to work with Markdown mode in &lt;span class="caps"&gt;ST&lt;/span&gt;. Other people have reported this and suggest that this is a problem with certain themes, but there was no change for me with different&amp;nbsp;themes. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;While Emacs can use a file dialog, the default method to display files for opening or saving is in the minibuffer. Again, having got used to this, dialogs seem so much out of place, but I could not find any plugin to get ido like behaviour for opening files in &lt;span class="caps"&gt;ST&lt;/span&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Macros are a very powerful feature of Emacs and &lt;span class="caps"&gt;ST&lt;/span&gt; has them too. Or is supposed to have them too. While I did not have problems with a few simple macros, most of those I tried did not work as expected. I did not spend much time trying to debug, but it is likely that the keybindings introduced by Sublemacspro may have been responsible. But again, with Emacs, macros have never gone wrong, no matter what keybindings have been&amp;nbsp;changed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Self documentation is another powerful feature of Emacs. For example, &amp;#8216;C-h k&amp;#8217; for &amp;#8216;describe key&amp;#8217; will bring up the function currently bound to that key. I sorely missed something like that in &lt;span class="caps"&gt;ST&lt;/span&gt;. Key bindings in &lt;span class="caps"&gt;ST&lt;/span&gt; are defined in multiple places, so again it was not easy to find the current binding for a key combination. This also makes it more difficult customizing &lt;span class="caps"&gt;ST&lt;/span&gt; compared to Emacs where you can put all your customizations in one file or a few files as you&amp;nbsp;wish.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The killer feature that forced me to return to Emacs is org-mode. I am not a power user of org-mode, far from it. But still I use it to store a few notes and I found my self opening Emacs just to use my org files. There seems to be some preliminary effort to make an org-mode clone in &lt;span class="caps"&gt;ST&lt;/span&gt;, but there is nothing functional&amp;nbsp;yet.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All in all, it was a good experience and it was with somewhat mixed feelings that I returned to Emacs. I have subsequently tweaked my Emacs to get some of the features I missed after leaving &lt;span class="caps"&gt;ST&lt;/span&gt;. My general impression is that &lt;span class="caps"&gt;ST&lt;/span&gt; seems to principally cater for those coming from Textmate. For Vim users, it might again be a reasonable switch as it seems to have good support of Vi keybindings. Emacs bindings are provided by a package and are still not perfect. For now, I am comfortably back in Emacs, but might try &lt;span class="caps"&gt;ST&lt;/span&gt; again after some time. A month has been too short a time to evaluate an editor and I have not tried any serious&amp;nbsp;customization. &lt;/p&gt;</summary><category term="editor"></category><category term="linux"></category></entry><entry><title>Install Mendeley plugin for Libreoffice</title><link href="http://rajaselvaraj.co.in/install-mendeley-plugin-for-libreoffice.html" rel="alternate"></link><published>2012-05-25T00:00:00+05:30</published><updated>2012-05-25T00:00:00+05:30</updated><author><name>Raja Selvaraj</name></author><id>tag:rajaselvaraj.co.in,2012-05-25:install-mendeley-plugin-for-libreoffice.html</id><summary type="html">&lt;p&gt;&lt;span class="caps"&gt;OK&lt;/span&gt;, I struggled with this for half an hour, so just to document the solution. On my new laptop with Ubuntu 12.04 and Libreoffice 3.5, I installed &lt;a href="http://www.mendeley.com/"&gt;Mendeley&lt;/a&gt; with the deb package from the website. Installation went well, but when trying to install the openoffice plugin, it first complained it could not find unopkg. After some time I found that this was now located at /usr/lib/libreoffice/program/. So I pointed Mendeleydesktop towards this and now it ended with a warning that &amp;#8216;Couldn&amp;#8217;t Install OpenOffice Plugin The OpenOffice unopkg utility gave the following output:&amp;#8217;. I read about manually installing the oxt which is at &amp;#8216;/opt/mendeleydesktop/share/mendeleydesktop/openOfficePlugin/Mendeley-1.5.2.oxt&amp;#8217; and opened the extension manager at libreoffice when I found that the Mendeley plugin is already installed. So, all I had to was restart Libreoffice and the Mendeley toolbar was now&amp;nbsp;available.&lt;/p&gt;</summary><category term="linux"></category></entry><entry><title>Linux on Thinkpad x220</title><link href="http://rajaselvaraj.co.in/linux-on-thinkpad.html" rel="alternate"></link><published>2012-05-18T00:00:00+05:30</published><updated>2012-05-18T00:00:00+05:30</updated><author><name>Raja Selvaraj</name></author><id>tag:rajaselvaraj.co.in,2012-05-18:linux-on-thinkpad.html</id><summary type="html">&lt;p&gt;I bought a Lenovo Thinkpad X 220 recently. This is my third thinkpad, the previous ones being an X40 (stolen) and an X61s (showing signs of wear and tear after 4 years of heavy use). Overall, there is nothing to disappoint a thinkpad fan with the fantastic keyboard and solid build as expected. The differences are a wider screen (mixed feeling about this, the width makes it easier to code with a split screen, but the loss of height needs some getting used to), a trackpad (which I don&amp;#8217;t use much) and some additional media buttons (again, not important for me). The screen is thinner and lighter and along with an &lt;span class="caps"&gt;SSD&lt;/span&gt; makes the system lighter.
&lt;!-- more --&gt;
The system came with Windows 7 preinstalled (there is no option to avoid the &amp;#8220;Windows tax&amp;#8221;). The last thinkpad I got, I had no second thoughts about removing Windows Vista and installing Linux. This time, however, I decided to try and retain Windows 7. I did not want to dual boot since I use Windows rarely. For virtualization, the options were to retain windows on the disk and use it in &amp;#8216;raw&amp;#8217; mode or to convert the physical windows partitions into a virtual disk. For the latter there seemed to be two solutions, &lt;a href="http://www.vmware.com/products/converter/"&gt;VMware&amp;#8217;s converter&lt;/a&gt; and &lt;a href="http://technet.microsoft.com/en-us/sysinternals/ee656415.aspx"&gt;Microsoft&amp;#8217;s disk2vhd&lt;/a&gt;.
disk2vhd was straightforward to use, working from within the running system itself. I selected all 3 partitions to make the virtual disk. This booted up fine in Virtualbox once virtualisation was enabled in the bios and the option &amp;#8216;&lt;span class="caps"&gt;IO&lt;/span&gt; &lt;span class="caps"&gt;APIC&lt;/span&gt;&amp;#8217; was enabled in virtualbox.
I copied out the virtual hard disk and erased all the partitions before installing Ubuntu 12.04. As I have come to expect, the install was smooth and everything worked perfectly. With the &lt;span class="caps"&gt;SSD&lt;/span&gt;, booting up and resume from suspend are very fast and the system is very responsive and running cooler than my old&amp;nbsp;one. &lt;/p&gt;</summary><category term="thinkpad"></category><category term="linux"></category></entry></feed>